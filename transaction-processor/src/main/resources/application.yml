spring:
  application.name: processor-service
  cloud:
    function:
      definition: transStateStoreProcessor;transactionProcess
    stream:
      bindings:
        transStateStoreProcessor-in-0.destination: ${trans.processor.name}.transStatus
        transStateStoreProcessor-out-0.destination: ${trans.processor.name}.transProcess

        # transactionProcess out is not required buz we are using branch to split and forward data to related topics
        transactionProcess-in-0.destination: ${trans.processor.name}.transProcess
      kafka:
        bindings:  #SERDES BINDING
          transStateStoreProcessor-in-0:
            consumer.configuration.value.deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          transStateStoreProcessor-out-0:
            producer.configuration.value.serializer: org.springframework.kafka.support.serializer.JsonSerializer
          transactionProcess-in-0:
            consumer.configuration.value.deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          transactionProcess-out-0:
            producer.configuration.value.serializer: org.springframework.kafka.support.serializer.JsonSerializer
        streams:
          bindings: # Assigning unique application id to every consumer
            transStateStoreProcessor-in-0.consumer.configuration.application.id: ${trans.processor.name}-transStateStoreProcessor
            transactionProcess-in-0.consumer.configuration.application.id: ${trans.processor.name}-transactionProcess
          binder:
            brokers: localhost:9092 # just to use it in the service app, Its already 'localhost:9092' by default
            application.id: ${spring.application.name}
            auto-add-partitions: true
            min-partition-count: 6
            state-store-retry:
              max-attempts: 10
              backoff-period: 500
            configuration: # STREAM SERDES BINDING
              application.server: localhost:${server.port} # for InteractiveQueryService to describe itself
              state.dir: state-${trans.processor.name}-${server.port} # to give a unique dir name in case you run multiple of this app on the same machine
              default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
              default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
              commit.interval.ms: 1000
              auto.offset.reset: latest